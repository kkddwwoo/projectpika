<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.post.repository.PostMapper">
	<!-- 게시글 등록 -->
	<insert id="savePost">
		<selectKey keyProperty="id" resultType="long" order="BEFORE">
			select seq_post.nextval from dual
		</selectKey>
		insert into post (
			id,
			title,
			content,
			user_id,
			views,
			create_time
		) values (
			#{id},
			#{title},
			#{content},
			#{user.id},
			#{views},
			#{createTime}
		)
	</insert>
	
	<resultMap type="post" id="postMap">
		<id property="id" column="id"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="views" column="views"/>
		<result property="createTime" column="create_time"/>
		<association property="user" column="user_id" javaType="user">
			<id property="id" column="user_id"/>
			<result property="username" column="username"/>
			<result property="name" column="name"/>
		</association>
	</resultMap>
	
	<!-- 모든 게시글 조회 -->
	<select id="findAllPosts" resultMap="postMap">
		select 
			p.id,
			p.title ,
			p.content ,
			p.views ,
			p.create_time ,
			u.id as user_id,
			u.username ,
			u.name 
		from
			post p join users U
		on 
			(p.user_id = u.id)
	</select>
	
	<!-- 아이디로 게시글 조회 -->
	<select id="findPostById" resultMap="postMap">
		select 
			p.id,
			p.title ,
			p.content ,
			p.views ,
			p.create_time ,
			u.id as user_id,
			u.username ,
			u.name 
		from
			post p join users U
		on 
			(p.user_id = u.id)
		where
			p.id = #{id}
	</select>
	
	<!-- 게시글 수정 -->
	<update id="updatePost">
		update post
		<set>
			<if test="title != null">title = #{title},</if>
			<if test="content != null">content = #{content},</if>
			<if test="views > 0">views = #{views},</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="removePost">
		delete from post where id = #{id}
	</delete>
</mapper>










